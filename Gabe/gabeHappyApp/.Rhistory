#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
shinyUI(pageWithSidebar(
textInput("mygraphs", label = "Pie Chart"),
sidebarPanel(
selectInput("pieData", "Columns in pie", "Update"),
selectInput("pieGroups", "Groups for pie", "Update")
)),
mainPanel(
plotOutput("plot")
)
))
server <- shinyServer(function(input, output, session) {
inFile = reactive({ return (read.csv(happy_info, header = TRUE))})
observe({
updateSelectInput(session, "pieData", choices = names(inFile()))
updateSelectInput(session, "pieGroups", choices = names(inFile()))
})
output$mygraphs = renderPlot({
piePlotData = piePlotData = aggregate(formula(paste0(".~",input$pieGroups)), inFile(), sum)
pie(piePlotData[[input$pieData]], labels = piePlotData[[input$pieGroups]])
})
})
# Run the application
shinyApp(ui = ui, server = server)
ggplot(happy_info, aes(x=Region, y= Happiness_Score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happiness_Score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happiness_Score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
library("ggplot2")
runApp('C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R/happy.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
runApp('C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R/happy.R')
setwd("C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Data")
getwd()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
ggplot(happy_info, aes(x=Region, y= Happiness.Score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happiness.Score, Economy..GDP.per.Capita, Family, Health..Life.Expectancy, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
View(happy_info)
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
o
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happiness.Score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
plot22 <- ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
View(plot22)
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, y=GDP, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Country, y=GDP, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Happy.score, GDP, Family, Health, Freedom, Generosity)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Country, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Country, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
shinyUI(pageWithSidebar(
textInput("mygraphs", label = "Pie Chart"),
sidebarPanel(
selectInput("pieData", "Columns in pie", "Update"),
selectInput("pieGroups", "Groups for pie", "Update")
)),
mainPanel(
plotOutput("plot")
)
))
server <- shinyServer(function(input, output, session) {
inFile = reactive({ return (read.csv(happy_info, header = TRUE))})
observe({
updateSelectInput(session, "pieData", choices = names(inFile()))
updateSelectInput(session, "pieGroups", choices = names(inFile()))
})
output$mygraphs = renderPlot({
piePlotData = piePlotData = aggregate(formula(paste0(".~",input$pieGroups)), inFile(), sum)
pie(piePlotData[[input$pieData]], labels = piePlotData[[input$pieGroups]])
})
})
# Run the application
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
runApp('C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R/happy.R')
setwd("C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Data")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
runApp('C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R/happy.R')
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
runApp('C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R/happy.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("data/WH17.csv", stringsAsFactors = FALSE)
setwd("C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/myapp.R")
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("/../../data/WH17.csv", stringsAsFactors = FALSE)
getwd()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("../data/WH17.csv", stringsAsFactors = FALSE)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
runApp('happy.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
server <- function(input, output, session) {
output$myplot <- renderPlot({
boxplot(Region ~ get(input$whisker) , data=happy_info)
})
}
shinyApp(ui, server)
runApp('happy.R')
library(shiny); runApp('server.R.R')
runApp('ui.R.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
# Define UI for application that draws a histogram
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
selectInput("whisker", label = "Choose a region"),
plotOutput("myplot"))
# Run the application
shinyApp(ui = ui, server = server)
ggplot(happy_info, aes(x=Region, y= Happy.score, colour = Region)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "Happiness Score Boxplot",
x = "Region",
y = "Happiness Score")
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
setwd("C:/Users/Curhanium/Desktop/Sophmore Year/Info 201/Info-201-Group-Project/Gabe/gabeHappyApp")
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
library(shiny)
runApp()
runApp()
runApp()
runApp()
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
happy_info <- read.csv("../../Data/WH17.csv", stringsAsFactors = FALSE)
library("ggplot2")
runApp()
runApp()
getwd()
runApp()
library("dplyr")
library(shiny)
library("dplyr")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_bar
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
